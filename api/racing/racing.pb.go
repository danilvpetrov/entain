// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.1
// source: api/racing/racing.proto

package racing

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListRacesRequest_OrderBy int32

const (
	// UNSPECIFIED indicates no specific ordering.
	ListRacesRequest_UNSPECIFIED ListRacesRequest_OrderBy = 0
	// ADVERTISED_START_TIME_ASC orders by advertised start time in
	// ascending order.
	ListRacesRequest_ADVERTISED_START_TIME_ASC ListRacesRequest_OrderBy = 1
	// ADVERTISED_START_TIME_DESC orders by advertised start time in
	// descending order.
	ListRacesRequest_ADVERTISED_START_TIME_DESC ListRacesRequest_OrderBy = 2
	// NUMBER_ASC orders by race number in ascending order.
	ListRacesRequest_NUMBER_ASC ListRacesRequest_OrderBy = 3
	// NUMBER_DESC orders by race number in descending order.
	ListRacesRequest_NUMBER_DESC ListRacesRequest_OrderBy = 4
	// NAME_ASC orders by race name in ascending order.
	ListRacesRequest_NAME_ASC ListRacesRequest_OrderBy = 5
	// NAME_DESC orders by race name in descending order.
	ListRacesRequest_NAME_DESC ListRacesRequest_OrderBy = 6
	// MEETING_ID_ASC orders by meeting ID in ascending order.
	ListRacesRequest_MEETING_ID_ASC ListRacesRequest_OrderBy = 7
	// MEETING_ID_DESC orders by meeting ID in descending order.
	ListRacesRequest_MEETING_ID_DESC ListRacesRequest_OrderBy = 8
)

// Enum value maps for ListRacesRequest_OrderBy.
var (
	ListRacesRequest_OrderBy_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "ADVERTISED_START_TIME_ASC",
		2: "ADVERTISED_START_TIME_DESC",
		3: "NUMBER_ASC",
		4: "NUMBER_DESC",
		5: "NAME_ASC",
		6: "NAME_DESC",
		7: "MEETING_ID_ASC",
		8: "MEETING_ID_DESC",
	}
	ListRacesRequest_OrderBy_value = map[string]int32{
		"UNSPECIFIED":                0,
		"ADVERTISED_START_TIME_ASC":  1,
		"ADVERTISED_START_TIME_DESC": 2,
		"NUMBER_ASC":                 3,
		"NUMBER_DESC":                4,
		"NAME_ASC":                   5,
		"NAME_DESC":                  6,
		"MEETING_ID_ASC":             7,
		"MEETING_ID_DESC":            8,
	}
)

func (x ListRacesRequest_OrderBy) Enum() *ListRacesRequest_OrderBy {
	p := new(ListRacesRequest_OrderBy)
	*p = x
	return p
}

func (x ListRacesRequest_OrderBy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListRacesRequest_OrderBy) Descriptor() protoreflect.EnumDescriptor {
	return file_api_racing_racing_proto_enumTypes[0].Descriptor()
}

func (ListRacesRequest_OrderBy) Type() protoreflect.EnumType {
	return &file_api_racing_racing_proto_enumTypes[0]
}

func (x ListRacesRequest_OrderBy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListRacesRequest_OrderBy.Descriptor instead.
func (ListRacesRequest_OrderBy) EnumDescriptor() ([]byte, []int) {
	return file_api_racing_racing_proto_rawDescGZIP(), []int{0, 0}
}

// Status represents the current status of the race.
type Race_Status int32

const (
	Race_UNSPECIFIED Race_Status = 0
	// OPEN indicates the race is open for betting.
	Race_OPEN Race_Status = 1
	// CLOSED indicates the race is closed for betting.
	Race_CLOSED Race_Status = 2
)

// Enum value maps for Race_Status.
var (
	Race_Status_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "OPEN",
		2: "CLOSED",
	}
	Race_Status_value = map[string]int32{
		"UNSPECIFIED": 0,
		"OPEN":        1,
		"CLOSED":      2,
	}
)

func (x Race_Status) Enum() *Race_Status {
	p := new(Race_Status)
	*p = x
	return p
}

func (x Race_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Race_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_api_racing_racing_proto_enumTypes[1].Descriptor()
}

func (Race_Status) Type() protoreflect.EnumType {
	return &file_api_racing_racing_proto_enumTypes[1]
}

func (x Race_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Race_Status.Descriptor instead.
func (Race_Status) EnumDescriptor() ([]byte, []int) {
	return file_api_racing_racing_proto_rawDescGZIP(), []int{3, 0}
}

// ListRacesRequest represents a request for the ListRaces call.
type ListRacesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// MeetingId is an optional list of meeting IDs to filter the races.
	MeetingId []int64 `protobuf:"varint,1,rep,packed,name=meeting_id,json=meetingId,proto3" json:"meeting_id,omitempty"`
	// VisibleOnly indicates whether to return only visible races.
	VisibleOnly bool `protobuf:"varint,2,opt,name=visible_only,json=visibleOnly,proto3" json:"visible_only,omitempty"`
	// OrderBy specifies the ordering of the returned races.
	OrderBy       []ListRacesRequest_OrderBy `protobuf:"varint,3,rep,packed,name=order_by,json=orderBy,proto3,enum=racing.ListRacesRequest_OrderBy" json:"order_by,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRacesRequest) Reset() {
	*x = ListRacesRequest{}
	mi := &file_api_racing_racing_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRacesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRacesRequest) ProtoMessage() {}

func (x *ListRacesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_racing_racing_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRacesRequest.ProtoReflect.Descriptor instead.
func (*ListRacesRequest) Descriptor() ([]byte, []int) {
	return file_api_racing_racing_proto_rawDescGZIP(), []int{0}
}

func (x *ListRacesRequest) GetMeetingId() []int64 {
	if x != nil {
		return x.MeetingId
	}
	return nil
}

func (x *ListRacesRequest) GetVisibleOnly() bool {
	if x != nil {
		return x.VisibleOnly
	}
	return false
}

func (x *ListRacesRequest) GetOrderBy() []ListRacesRequest_OrderBy {
	if x != nil {
		return x.OrderBy
	}
	return nil
}

// ListRacesResponse represents a response to the ListRaces call.
type ListRacesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Races is a list of horse racing events.
	Races         []*Race `protobuf:"bytes,1,rep,name=races,proto3" json:"races,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRacesResponse) Reset() {
	*x = ListRacesResponse{}
	mi := &file_api_racing_racing_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRacesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRacesResponse) ProtoMessage() {}

func (x *ListRacesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_racing_racing_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRacesResponse.ProtoReflect.Descriptor instead.
func (*ListRacesResponse) Descriptor() ([]byte, []int) {
	return file_api_racing_racing_proto_rawDescGZIP(), []int{1}
}

func (x *ListRacesResponse) GetRaces() []*Race {
	if x != nil {
		return x.Races
	}
	return nil
}

// GetRaceRequest represents a request for the GetRace call.
type GetRaceRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the race to retrieve.
	RaceId        int64 `protobuf:"varint,1,opt,name=race_id,json=raceId,proto3" json:"race_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRaceRequest) Reset() {
	*x = GetRaceRequest{}
	mi := &file_api_racing_racing_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRaceRequest) ProtoMessage() {}

func (x *GetRaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_racing_racing_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRaceRequest.ProtoReflect.Descriptor instead.
func (*GetRaceRequest) Descriptor() ([]byte, []int) {
	return file_api_racing_racing_proto_rawDescGZIP(), []int{2}
}

func (x *GetRaceRequest) GetRaceId() int64 {
	if x != nil {
		return x.RaceId
	}
	return 0
}

// Race represents a horse racing event.
type Race struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID represents a unique identifier for the race.
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// MeetingID represents a unique identifier for the races meeting.
	MeetingId int64 `protobuf:"varint,2,opt,name=meeting_id,json=meetingId,proto3" json:"meeting_id,omitempty"`
	// Name is the official name given to the race.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// Number represents the number of the race.
	Number int64 `protobuf:"varint,4,opt,name=number,proto3" json:"number,omitempty"`
	// Visible represents whether or not the race is visible.
	Visible bool `protobuf:"varint,5,opt,name=visible,proto3" json:"visible,omitempty"`
	// AdvertisedStartTime is the time the race is advertised to run.
	AdvertisedStartTime *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=advertised_start_time,json=advertisedStartTime,proto3" json:"advertised_start_time,omitempty"`
	// Status represents the current status of the race.
	Status        Race_Status `protobuf:"varint,7,opt,name=status,proto3,enum=racing.Race_Status" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Race) Reset() {
	*x = Race{}
	mi := &file_api_racing_racing_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Race) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Race) ProtoMessage() {}

func (x *Race) ProtoReflect() protoreflect.Message {
	mi := &file_api_racing_racing_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Race.ProtoReflect.Descriptor instead.
func (*Race) Descriptor() ([]byte, []int) {
	return file_api_racing_racing_proto_rawDescGZIP(), []int{3}
}

func (x *Race) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Race) GetMeetingId() int64 {
	if x != nil {
		return x.MeetingId
	}
	return 0
}

func (x *Race) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Race) GetNumber() int64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *Race) GetVisible() bool {
	if x != nil {
		return x.Visible
	}
	return false
}

func (x *Race) GetAdvertisedStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.AdvertisedStartTime
	}
	return nil
}

func (x *Race) GetStatus() Race_Status {
	if x != nil {
		return x.Status
	}
	return Race_UNSPECIFIED
}

var File_api_racing_racing_proto protoreflect.FileDescriptor

const file_api_racing_racing_proto_rawDesc = "" +
	"\n" +
	"\x17api/racing/racing.proto\x12\x06racing\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1cgoogle/api/annotations.proto\"\xd4\x02\n" +
	"\x10ListRacesRequest\x12\x1d\n" +
	"\n" +
	"meeting_id\x18\x01 \x03(\x03R\tmeetingId\x12!\n" +
	"\fvisible_only\x18\x02 \x01(\bR\vvisibleOnly\x12;\n" +
	"\border_by\x18\x03 \x03(\x0e2 .racing.ListRacesRequest.OrderByR\aorderBy\"\xc0\x01\n" +
	"\aOrderBy\x12\x0f\n" +
	"\vUNSPECIFIED\x10\x00\x12\x1d\n" +
	"\x19ADVERTISED_START_TIME_ASC\x10\x01\x12\x1e\n" +
	"\x1aADVERTISED_START_TIME_DESC\x10\x02\x12\x0e\n" +
	"\n" +
	"NUMBER_ASC\x10\x03\x12\x0f\n" +
	"\vNUMBER_DESC\x10\x04\x12\f\n" +
	"\bNAME_ASC\x10\x05\x12\r\n" +
	"\tNAME_DESC\x10\x06\x12\x12\n" +
	"\x0eMEETING_ID_ASC\x10\a\x12\x13\n" +
	"\x0fMEETING_ID_DESC\x10\b\"7\n" +
	"\x11ListRacesResponse\x12\"\n" +
	"\x05races\x18\x01 \x03(\v2\f.racing.RaceR\x05races\")\n" +
	"\x0eGetRaceRequest\x12\x17\n" +
	"\arace_id\x18\x01 \x01(\x03R\x06raceId\"\xa9\x02\n" +
	"\x04Race\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x1d\n" +
	"\n" +
	"meeting_id\x18\x02 \x01(\x03R\tmeetingId\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x16\n" +
	"\x06number\x18\x04 \x01(\x03R\x06number\x12\x18\n" +
	"\avisible\x18\x05 \x01(\bR\avisible\x12N\n" +
	"\x15advertised_start_time\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\x13advertisedStartTime\x12+\n" +
	"\x06status\x18\a \x01(\x0e2\x13.racing.Race.StatusR\x06status\"/\n" +
	"\x06Status\x12\x0f\n" +
	"\vUNSPECIFIED\x10\x00\x12\b\n" +
	"\x04OPEN\x10\x01\x12\n" +
	"\n" +
	"\x06CLOSED\x10\x022\xab\x01\n" +
	"\x06Racing\x12S\n" +
	"\tListRaces\x12\x18.racing.ListRacesRequest\x1a\x19.racing.ListRacesResponse\"\x11\x82\xd3\xe4\x93\x02\v\x12\t/v1/races\x12L\n" +
	"\aGetRace\x12\x16.racing.GetRaceRequest\x1a\f.racing.Race\"\x1b\x82\xd3\xe4\x93\x02\x15\x12\x13/v1/races/{race_id}B+Z)github.com/danilvpetrov/entain/api/racingb\x06proto3"

var (
	file_api_racing_racing_proto_rawDescOnce sync.Once
	file_api_racing_racing_proto_rawDescData []byte
)

func file_api_racing_racing_proto_rawDescGZIP() []byte {
	file_api_racing_racing_proto_rawDescOnce.Do(func() {
		file_api_racing_racing_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_racing_racing_proto_rawDesc), len(file_api_racing_racing_proto_rawDesc)))
	})
	return file_api_racing_racing_proto_rawDescData
}

var file_api_racing_racing_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_api_racing_racing_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_api_racing_racing_proto_goTypes = []any{
	(ListRacesRequest_OrderBy)(0), // 0: racing.ListRacesRequest.OrderBy
	(Race_Status)(0),              // 1: racing.Race.Status
	(*ListRacesRequest)(nil),      // 2: racing.ListRacesRequest
	(*ListRacesResponse)(nil),     // 3: racing.ListRacesResponse
	(*GetRaceRequest)(nil),        // 4: racing.GetRaceRequest
	(*Race)(nil),                  // 5: racing.Race
	(*timestamppb.Timestamp)(nil), // 6: google.protobuf.Timestamp
}
var file_api_racing_racing_proto_depIdxs = []int32{
	0, // 0: racing.ListRacesRequest.order_by:type_name -> racing.ListRacesRequest.OrderBy
	5, // 1: racing.ListRacesResponse.races:type_name -> racing.Race
	6, // 2: racing.Race.advertised_start_time:type_name -> google.protobuf.Timestamp
	1, // 3: racing.Race.status:type_name -> racing.Race.Status
	2, // 4: racing.Racing.ListRaces:input_type -> racing.ListRacesRequest
	4, // 5: racing.Racing.GetRace:input_type -> racing.GetRaceRequest
	3, // 6: racing.Racing.ListRaces:output_type -> racing.ListRacesResponse
	5, // 7: racing.Racing.GetRace:output_type -> racing.Race
	6, // [6:8] is the sub-list for method output_type
	4, // [4:6] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_api_racing_racing_proto_init() }
func file_api_racing_racing_proto_init() {
	if File_api_racing_racing_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_racing_racing_proto_rawDesc), len(file_api_racing_racing_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_racing_racing_proto_goTypes,
		DependencyIndexes: file_api_racing_racing_proto_depIdxs,
		EnumInfos:         file_api_racing_racing_proto_enumTypes,
		MessageInfos:      file_api_racing_racing_proto_msgTypes,
	}.Build()
	File_api_racing_racing_proto = out.File
	file_api_racing_racing_proto_goTypes = nil
	file_api_racing_racing_proto_depIdxs = nil
}
