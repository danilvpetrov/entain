// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.1
// source: api/sports/sports.proto

package sports

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListEventsRequest_OrderBy int32

const (
	// UNSPECIFIED indicates no specific ordering.
	ListEventsRequest_UNSPECIFIED ListEventsRequest_OrderBy = 0
	// ADVERTISED_START_TIME_ASC orders by advertised start time in
	// ascending order.
	ListEventsRequest_ADVERTISED_START_TIME_ASC ListEventsRequest_OrderBy = 1
	// ADVERTISED_START_TIME_DESC orders by advertised start time in
	// descending order.
	ListEventsRequest_ADVERTISED_START_TIME_DESC ListEventsRequest_OrderBy = 2
	// NAME_ASC orders by sports event name in ascending order.
	ListEventsRequest_NAME_ASC ListEventsRequest_OrderBy = 3
	// NAME_DESC orders by sports event name in descending order.
	ListEventsRequest_NAME_DESC ListEventsRequest_OrderBy = 4
	// COMPETITION_ASC orders by competition name in ascending order.
	ListEventsRequest_COMPETITION_ASC ListEventsRequest_OrderBy = 5
	// COMPETITION_DESC orders by competition name in descending order.
	ListEventsRequest_COMPETITION_DESC ListEventsRequest_OrderBy = 6
)

// Enum value maps for ListEventsRequest_OrderBy.
var (
	ListEventsRequest_OrderBy_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "ADVERTISED_START_TIME_ASC",
		2: "ADVERTISED_START_TIME_DESC",
		3: "NAME_ASC",
		4: "NAME_DESC",
		5: "COMPETITION_ASC",
		6: "COMPETITION_DESC",
	}
	ListEventsRequest_OrderBy_value = map[string]int32{
		"UNSPECIFIED":                0,
		"ADVERTISED_START_TIME_ASC":  1,
		"ADVERTISED_START_TIME_DESC": 2,
		"NAME_ASC":                   3,
		"NAME_DESC":                  4,
		"COMPETITION_ASC":            5,
		"COMPETITION_DESC":           6,
	}
)

func (x ListEventsRequest_OrderBy) Enum() *ListEventsRequest_OrderBy {
	p := new(ListEventsRequest_OrderBy)
	*p = x
	return p
}

func (x ListEventsRequest_OrderBy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListEventsRequest_OrderBy) Descriptor() protoreflect.EnumDescriptor {
	return file_api_sports_sports_proto_enumTypes[0].Descriptor()
}

func (ListEventsRequest_OrderBy) Type() protoreflect.EnumType {
	return &file_api_sports_sports_proto_enumTypes[0]
}

func (x ListEventsRequest_OrderBy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListEventsRequest_OrderBy.Descriptor instead.
func (ListEventsRequest_OrderBy) EnumDescriptor() ([]byte, []int) {
	return file_api_sports_sports_proto_rawDescGZIP(), []int{0, 0}
}

type Event_Category int32

const (
	// UNSPECIFIED_CATEGORY indicates no specific category.
	Event_UNSPECIFIED_CATEGORY Event_Category = 0
	// AMERICAN_FOOTBALL represents the American Football category.
	Event_AMERICAN_FOOTBALL Event_Category = 1
	// AUSTRALIAN_RULES represents the Australian Rules category.
	Event_AUSTRALIAN_RULES Event_Category = 2
	// BADMINTON represents the Badminton category.
	Event_BADMINTON Event_Category = 3
	// BASEBALL represents the Baseball category.
	Event_BASEBALL Event_Category = 4
	// BASKETBALL represents the Basketball category.
	Event_BASKETBALL Event_Category = 5
	// BOXING represents the Boxing category.
	Event_BOXING Event_Category = 6
	// CRICKET represents the Cricket category.
	Event_CRICKET Event_Category = 7
	// CYCLING represents the Cycling category.
	Event_CYCLING Event_Category = 8
	// DARTS represents the Darts category.
	Event_DARTS Event_Category = 9
	// ESPORTS represents the Esports category.
	Event_ESPORTS Event_Category = 10
	// GAELIC_SPORTS represents the Gaelic Sports category.
	Event_GAELIC_SPORTS Event_Category = 11
	// GOLF represents the Golf category.
	Event_GOLF Event_Category = 12
	// HANDBALL represents the Handball category.
	Event_HANDBALL Event_Category = 13
	// ICE_HOCKEY represents the Ice Hockey category.
	Event_ICE_HOCKEY Event_Category = 14
	// MOTOR_SPORT represents the Motor Sport category.
	Event_MOTOR_SPORT Event_Category = 15
	// NETBALL represents the Netball category.
	Event_NETBALL Event_Category = 16
	// NOVELTY represents the Novelty category.
	Event_NOVELTY Event_Category = 17
	// POLITICS represents the Politics category.
	Event_POLITICS Event_Category = 18
	// POOL represents the Pool category.
	Event_POOL Event_Category = 19
	// RUGBY_LEAGUE represents the Rugby League category.
	Event_RUGBY_LEAGUE Event_Category = 20
	// RUGBY_UNION represents the Rugby Union category.
	Event_RUGBY_UNION Event_Category = 21
	// SNOOKER represents the Snooker category.
	Event_SNOOKER Event_Category = 22
	// SOCCER represents the Soccer category.
	Event_SOCCER Event_Category = 23
	// TABLE_TENNIS represents the Table Tennis category.
	Event_TABLE_TENNIS Event_Category = 24
	// TENNIS represents the Tennis category.
	Event_TENNIS Event_Category = 25
	// MIXED_MARTIAL_ARTS represents the Mixed Martial Arts category.
	Event_MIXED_MARTIAL_ARTS Event_Category = 26
	// VOLLEYBALL represents the Volleyball category.
	Event_VOLLEYBALL Event_Category = 27
)

// Enum value maps for Event_Category.
var (
	Event_Category_name = map[int32]string{
		0:  "UNSPECIFIED_CATEGORY",
		1:  "AMERICAN_FOOTBALL",
		2:  "AUSTRALIAN_RULES",
		3:  "BADMINTON",
		4:  "BASEBALL",
		5:  "BASKETBALL",
		6:  "BOXING",
		7:  "CRICKET",
		8:  "CYCLING",
		9:  "DARTS",
		10: "ESPORTS",
		11: "GAELIC_SPORTS",
		12: "GOLF",
		13: "HANDBALL",
		14: "ICE_HOCKEY",
		15: "MOTOR_SPORT",
		16: "NETBALL",
		17: "NOVELTY",
		18: "POLITICS",
		19: "POOL",
		20: "RUGBY_LEAGUE",
		21: "RUGBY_UNION",
		22: "SNOOKER",
		23: "SOCCER",
		24: "TABLE_TENNIS",
		25: "TENNIS",
		26: "MIXED_MARTIAL_ARTS",
		27: "VOLLEYBALL",
	}
	Event_Category_value = map[string]int32{
		"UNSPECIFIED_CATEGORY": 0,
		"AMERICAN_FOOTBALL":    1,
		"AUSTRALIAN_RULES":     2,
		"BADMINTON":            3,
		"BASEBALL":             4,
		"BASKETBALL":           5,
		"BOXING":               6,
		"CRICKET":              7,
		"CYCLING":              8,
		"DARTS":                9,
		"ESPORTS":              10,
		"GAELIC_SPORTS":        11,
		"GOLF":                 12,
		"HANDBALL":             13,
		"ICE_HOCKEY":           14,
		"MOTOR_SPORT":          15,
		"NETBALL":              16,
		"NOVELTY":              17,
		"POLITICS":             18,
		"POOL":                 19,
		"RUGBY_LEAGUE":         20,
		"RUGBY_UNION":          21,
		"SNOOKER":              22,
		"SOCCER":               23,
		"TABLE_TENNIS":         24,
		"TENNIS":               25,
		"MIXED_MARTIAL_ARTS":   26,
		"VOLLEYBALL":           27,
	}
)

func (x Event_Category) Enum() *Event_Category {
	p := new(Event_Category)
	*p = x
	return p
}

func (x Event_Category) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Event_Category) Descriptor() protoreflect.EnumDescriptor {
	return file_api_sports_sports_proto_enumTypes[1].Descriptor()
}

func (Event_Category) Type() protoreflect.EnumType {
	return &file_api_sports_sports_proto_enumTypes[1]
}

func (x Event_Category) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Event_Category.Descriptor instead.
func (Event_Category) EnumDescriptor() ([]byte, []int) {
	return file_api_sports_sports_proto_rawDescGZIP(), []int{3, 0}
}

// Status represents the current status of the event.
type Event_Status int32

const (
	Event_UNSPECIFIED_STATUS Event_Status = 0
	// OPEN indicates the event is open for betting.
	Event_OPEN Event_Status = 1
	// CLOSED indicates the event is closed for betting.
	Event_CLOSED Event_Status = 2
)

// Enum value maps for Event_Status.
var (
	Event_Status_name = map[int32]string{
		0: "UNSPECIFIED_STATUS",
		1: "OPEN",
		2: "CLOSED",
	}
	Event_Status_value = map[string]int32{
		"UNSPECIFIED_STATUS": 0,
		"OPEN":               1,
		"CLOSED":             2,
	}
)

func (x Event_Status) Enum() *Event_Status {
	p := new(Event_Status)
	*p = x
	return p
}

func (x Event_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Event_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_api_sports_sports_proto_enumTypes[2].Descriptor()
}

func (Event_Status) Type() protoreflect.EnumType {
	return &file_api_sports_sports_proto_enumTypes[2]
}

func (x Event_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Event_Status.Descriptor instead.
func (Event_Status) EnumDescriptor() ([]byte, []int) {
	return file_api_sports_sports_proto_rawDescGZIP(), []int{3, 1}
}

// ListEventsRequest represents a request for the ListEvents call.
type ListEventsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Category is an optional list of event categories to filter the events.
	Category []Event_Category `protobuf:"varint,1,rep,packed,name=category,proto3,enum=sports.Event_Category" json:"category,omitempty"`
	// VisibleOnly indicates whether to return only visible events.
	VisibleOnly bool `protobuf:"varint,2,opt,name=visible_only,json=visibleOnly,proto3" json:"visible_only,omitempty"`
	// OrderBy specifies the ordering of the returned events.
	OrderBy       []ListEventsRequest_OrderBy `protobuf:"varint,3,rep,packed,name=order_by,json=orderBy,proto3,enum=sports.ListEventsRequest_OrderBy" json:"order_by,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListEventsRequest) Reset() {
	*x = ListEventsRequest{}
	mi := &file_api_sports_sports_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEventsRequest) ProtoMessage() {}

func (x *ListEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_sports_sports_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEventsRequest.ProtoReflect.Descriptor instead.
func (*ListEventsRequest) Descriptor() ([]byte, []int) {
	return file_api_sports_sports_proto_rawDescGZIP(), []int{0}
}

func (x *ListEventsRequest) GetCategory() []Event_Category {
	if x != nil {
		return x.Category
	}
	return nil
}

func (x *ListEventsRequest) GetVisibleOnly() bool {
	if x != nil {
		return x.VisibleOnly
	}
	return false
}

func (x *ListEventsRequest) GetOrderBy() []ListEventsRequest_OrderBy {
	if x != nil {
		return x.OrderBy
	}
	return nil
}

// ListEventsResponse represents a response to the ListEvents call.
type ListEventsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Events is a list of sports events.
	Events        []*Event `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListEventsResponse) Reset() {
	*x = ListEventsResponse{}
	mi := &file_api_sports_sports_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEventsResponse) ProtoMessage() {}

func (x *ListEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_sports_sports_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEventsResponse.ProtoReflect.Descriptor instead.
func (*ListEventsResponse) Descriptor() ([]byte, []int) {
	return file_api_sports_sports_proto_rawDescGZIP(), []int{1}
}

func (x *ListEventsResponse) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

// GetEventRequest represents a request for the GetEvent call.
type GetEventRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the sports event to retrieve.
	EventId       int64 `protobuf:"varint,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEventRequest) Reset() {
	*x = GetEventRequest{}
	mi := &file_api_sports_sports_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventRequest) ProtoMessage() {}

func (x *GetEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_sports_sports_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventRequest.ProtoReflect.Descriptor instead.
func (*GetEventRequest) Descriptor() ([]byte, []int) {
	return file_api_sports_sports_proto_rawDescGZIP(), []int{2}
}

func (x *GetEventRequest) GetEventId() int64 {
	if x != nil {
		return x.EventId
	}
	return 0
}

// Event represents a sports event.
type Event struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID represents a unique identifier for the event.
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Name is the official name given to the event.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// Category represents the category of the event.
	Category    Event_Category `protobuf:"varint,4,opt,name=category,proto3,enum=sports.Event_Category" json:"category,omitempty"`
	Competition string         `protobuf:"bytes,5,opt,name=competition,proto3" json:"competition,omitempty"`
	// Visible represents whether or not the event is visible.
	Visible bool `protobuf:"varint,6,opt,name=visible,proto3" json:"visible,omitempty"`
	// AdvertisedStartTime is the time the event is advertised to run.
	AdvertisedStartTime *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=advertised_start_time,json=advertisedStartTime,proto3" json:"advertised_start_time,omitempty"`
	// Status represents the current status of the event.
	Status        Event_Status `protobuf:"varint,8,opt,name=status,proto3,enum=sports.Event_Status" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Event) Reset() {
	*x = Event{}
	mi := &file_api_sports_sports_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_api_sports_sports_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_api_sports_sports_proto_rawDescGZIP(), []int{3}
}

func (x *Event) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Event) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Event) GetCategory() Event_Category {
	if x != nil {
		return x.Category
	}
	return Event_UNSPECIFIED_CATEGORY
}

func (x *Event) GetCompetition() string {
	if x != nil {
		return x.Competition
	}
	return ""
}

func (x *Event) GetVisible() bool {
	if x != nil {
		return x.Visible
	}
	return false
}

func (x *Event) GetAdvertisedStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.AdvertisedStartTime
	}
	return nil
}

func (x *Event) GetStatus() Event_Status {
	if x != nil {
		return x.Status
	}
	return Event_UNSPECIFIED_STATUS
}

var File_api_sports_sports_proto protoreflect.FileDescriptor

const file_api_sports_sports_proto_rawDesc = "" +
	"\n" +
	"\x17api/sports/sports.proto\x12\x06sports\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1cgoogle/api/annotations.proto\"\xcc\x02\n" +
	"\x11ListEventsRequest\x122\n" +
	"\bcategory\x18\x01 \x03(\x0e2\x16.sports.Event.CategoryR\bcategory\x12!\n" +
	"\fvisible_only\x18\x02 \x01(\bR\vvisibleOnly\x12<\n" +
	"\border_by\x18\x03 \x03(\x0e2!.sports.ListEventsRequest.OrderByR\aorderBy\"\xa1\x01\n" +
	"\aOrderBy\x12\x0f\n" +
	"\vUNSPECIFIED\x10\x00\x12\x1d\n" +
	"\x19ADVERTISED_START_TIME_ASC\x10\x01\x12\x1e\n" +
	"\x1aADVERTISED_START_TIME_DESC\x10\x02\x12\f\n" +
	"\bNAME_ASC\x10\x03\x12\r\n" +
	"\tNAME_DESC\x10\x04\x12\x13\n" +
	"\x0fCOMPETITION_ASC\x10\x05\x12\x14\n" +
	"\x10COMPETITION_DESC\x10\x06\";\n" +
	"\x12ListEventsResponse\x12%\n" +
	"\x06events\x18\x01 \x03(\v2\r.sports.EventR\x06events\",\n" +
	"\x0fGetEventRequest\x12\x19\n" +
	"\bevent_id\x18\x01 \x01(\x03R\aeventId\"\x90\x06\n" +
	"\x05Event\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x122\n" +
	"\bcategory\x18\x04 \x01(\x0e2\x16.sports.Event.CategoryR\bcategory\x12 \n" +
	"\vcompetition\x18\x05 \x01(\tR\vcompetition\x12\x18\n" +
	"\avisible\x18\x06 \x01(\bR\avisible\x12N\n" +
	"\x15advertised_start_time\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\x13advertisedStartTime\x12,\n" +
	"\x06status\x18\b \x01(\x0e2\x14.sports.Event.StatusR\x06status\"\xbc\x03\n" +
	"\bCategory\x12\x18\n" +
	"\x14UNSPECIFIED_CATEGORY\x10\x00\x12\x15\n" +
	"\x11AMERICAN_FOOTBALL\x10\x01\x12\x14\n" +
	"\x10AUSTRALIAN_RULES\x10\x02\x12\r\n" +
	"\tBADMINTON\x10\x03\x12\f\n" +
	"\bBASEBALL\x10\x04\x12\x0e\n" +
	"\n" +
	"BASKETBALL\x10\x05\x12\n" +
	"\n" +
	"\x06BOXING\x10\x06\x12\v\n" +
	"\aCRICKET\x10\a\x12\v\n" +
	"\aCYCLING\x10\b\x12\t\n" +
	"\x05DARTS\x10\t\x12\v\n" +
	"\aESPORTS\x10\n" +
	"\x12\x11\n" +
	"\rGAELIC_SPORTS\x10\v\x12\b\n" +
	"\x04GOLF\x10\f\x12\f\n" +
	"\bHANDBALL\x10\r\x12\x0e\n" +
	"\n" +
	"ICE_HOCKEY\x10\x0e\x12\x0f\n" +
	"\vMOTOR_SPORT\x10\x0f\x12\v\n" +
	"\aNETBALL\x10\x10\x12\v\n" +
	"\aNOVELTY\x10\x11\x12\f\n" +
	"\bPOLITICS\x10\x12\x12\b\n" +
	"\x04POOL\x10\x13\x12\x10\n" +
	"\fRUGBY_LEAGUE\x10\x14\x12\x0f\n" +
	"\vRUGBY_UNION\x10\x15\x12\v\n" +
	"\aSNOOKER\x10\x16\x12\n" +
	"\n" +
	"\x06SOCCER\x10\x17\x12\x10\n" +
	"\fTABLE_TENNIS\x10\x18\x12\n" +
	"\n" +
	"\x06TENNIS\x10\x19\x12\x16\n" +
	"\x12MIXED_MARTIAL_ARTS\x10\x1a\x12\x0e\n" +
	"\n" +
	"VOLLEYBALL\x10\x1b\"6\n" +
	"\x06Status\x12\x16\n" +
	"\x12UNSPECIFIED_STATUS\x10\x00\x12\b\n" +
	"\x04OPEN\x10\x01\x12\n" +
	"\n" +
	"\x06CLOSED\x10\x022\xb4\x01\n" +
	"\x06Sports\x12W\n" +
	"\n" +
	"ListEvents\x12\x19.sports.ListEventsRequest\x1a\x1a.sports.ListEventsResponse\"\x12\x82\xd3\xe4\x93\x02\f\x12\n" +
	"/v1/sports\x12Q\n" +
	"\bGetEvent\x12\x17.sports.GetEventRequest\x1a\r.sports.Event\"\x1d\x82\xd3\xe4\x93\x02\x17\x12\x15/v1/sports/{event_id}B+Z)github.com/danilvpetrov/entain/api/sportsb\x06proto3"

var (
	file_api_sports_sports_proto_rawDescOnce sync.Once
	file_api_sports_sports_proto_rawDescData []byte
)

func file_api_sports_sports_proto_rawDescGZIP() []byte {
	file_api_sports_sports_proto_rawDescOnce.Do(func() {
		file_api_sports_sports_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_sports_sports_proto_rawDesc), len(file_api_sports_sports_proto_rawDesc)))
	})
	return file_api_sports_sports_proto_rawDescData
}

var file_api_sports_sports_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_api_sports_sports_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_api_sports_sports_proto_goTypes = []any{
	(ListEventsRequest_OrderBy)(0), // 0: sports.ListEventsRequest.OrderBy
	(Event_Category)(0),            // 1: sports.Event.Category
	(Event_Status)(0),              // 2: sports.Event.Status
	(*ListEventsRequest)(nil),      // 3: sports.ListEventsRequest
	(*ListEventsResponse)(nil),     // 4: sports.ListEventsResponse
	(*GetEventRequest)(nil),        // 5: sports.GetEventRequest
	(*Event)(nil),                  // 6: sports.Event
	(*timestamppb.Timestamp)(nil),  // 7: google.protobuf.Timestamp
}
var file_api_sports_sports_proto_depIdxs = []int32{
	1, // 0: sports.ListEventsRequest.category:type_name -> sports.Event.Category
	0, // 1: sports.ListEventsRequest.order_by:type_name -> sports.ListEventsRequest.OrderBy
	6, // 2: sports.ListEventsResponse.events:type_name -> sports.Event
	1, // 3: sports.Event.category:type_name -> sports.Event.Category
	7, // 4: sports.Event.advertised_start_time:type_name -> google.protobuf.Timestamp
	2, // 5: sports.Event.status:type_name -> sports.Event.Status
	3, // 6: sports.Sports.ListEvents:input_type -> sports.ListEventsRequest
	5, // 7: sports.Sports.GetEvent:input_type -> sports.GetEventRequest
	4, // 8: sports.Sports.ListEvents:output_type -> sports.ListEventsResponse
	6, // 9: sports.Sports.GetEvent:output_type -> sports.Event
	8, // [8:10] is the sub-list for method output_type
	6, // [6:8] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_api_sports_sports_proto_init() }
func file_api_sports_sports_proto_init() {
	if File_api_sports_sports_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_sports_sports_proto_rawDesc), len(file_api_sports_sports_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_sports_sports_proto_goTypes,
		DependencyIndexes: file_api_sports_sports_proto_depIdxs,
		EnumInfos:         file_api_sports_sports_proto_enumTypes,
		MessageInfos:      file_api_sports_sports_proto_msgTypes,
	}.Build()
	File_api_sports_sports_proto = out.File
	file_api_sports_sports_proto_goTypes = nil
	file_api_sports_sports_proto_depIdxs = nil
}
